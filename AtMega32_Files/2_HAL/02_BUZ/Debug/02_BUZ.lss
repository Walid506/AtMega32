
02_BUZ.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007cc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000096c  00000000  00000000  00000820  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000004b9  00000000  00000000  0000118c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 df 03 	call	0x7be	; 0x7be <main>
  64:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <BUZ_voidInit>:


/* Implementation of the functions*/

void BUZ_voidInit        ( BUZ_Type BUZ_Configuration )
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <BUZ_voidInit+0x6>
  72:	0f 92       	push	r0
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	69 83       	std	Y+1, r22	; 0x01
  7a:	7a 83       	std	Y+2, r23	; 0x02
  7c:	8b 83       	std	Y+3, r24	; 0x03

	/* make the pin output */
	DIO_u8SetPinDirection(BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_u8PIN_OUTPUT ) ;
  7e:	89 81       	ldd	r24, Y+1	; 0x01
  80:	9a 81       	ldd	r25, Y+2	; 0x02
  82:	69 2f       	mov	r22, r25
  84:	41 e0       	ldi	r20, 0x01	; 1
  86:	0e 94 8f 00 	call	0x11e	; 0x11e <DIO_u8SetPinDirection>

}
  8a:	0f 90       	pop	r0
  8c:	0f 90       	pop	r0
  8e:	0f 90       	pop	r0
  90:	cf 91       	pop	r28
  92:	df 91       	pop	r29
  94:	08 95       	ret

00000096 <BUZ_voidOn>:

void BUZ_voidOn          ( BUZ_Type BUZ_Configuration )
{
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	00 d0       	rcall	.+0      	; 0x9c <BUZ_voidOn+0x6>
  9c:	0f 92       	push	r0
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	69 83       	std	Y+1, r22	; 0x01
  a4:	7a 83       	std	Y+2, r23	; 0x02
  a6:	8b 83       	std	Y+3, r24	; 0x03
	if( BUZ_Configuration.Active_State == BUZ_ACTIVE_HIGH )
  a8:	8b 81       	ldd	r24, Y+3	; 0x03
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	39 f4       	brne	.+14     	; 0xbc <BUZ_voidOn+0x26>
	{
		DIO_u8SetPinValue(BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_u8PIN_HIGH) ;
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	9a 81       	ldd	r25, Y+2	; 0x02
  b2:	69 2f       	mov	r22, r25
  b4:	41 e0       	ldi	r20, 0x01	; 1
  b6:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_u8SetPinValue>
  ba:	09 c0       	rjmp	.+18     	; 0xce <BUZ_voidOn+0x38>
	}
	else if ( BUZ_Configuration.Active_State == BUZ_ACTIVE_LOW )
  bc:	8b 81       	ldd	r24, Y+3	; 0x03
  be:	88 23       	and	r24, r24
  c0:	31 f4       	brne	.+12     	; 0xce <BUZ_voidOn+0x38>
	{
		DIO_u8SetPinValue(BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_u8PIN_LOW) ;
  c2:	89 81       	ldd	r24, Y+1	; 0x01
  c4:	9a 81       	ldd	r25, Y+2	; 0x02
  c6:	69 2f       	mov	r22, r25
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_u8SetPinValue>
	}
}
  ce:	0f 90       	pop	r0
  d0:	0f 90       	pop	r0
  d2:	0f 90       	pop	r0
  d4:	cf 91       	pop	r28
  d6:	df 91       	pop	r29
  d8:	08 95       	ret

000000da <BUZ_voidOff>:

void BUZ_voidOff         ( BUZ_Type BUZ_Configuration )
{
  da:	df 93       	push	r29
  dc:	cf 93       	push	r28
  de:	00 d0       	rcall	.+0      	; 0xe0 <BUZ_voidOff+0x6>
  e0:	0f 92       	push	r0
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62
  e6:	69 83       	std	Y+1, r22	; 0x01
  e8:	7a 83       	std	Y+2, r23	; 0x02
  ea:	8b 83       	std	Y+3, r24	; 0x03
	if( BUZ_Configuration.Active_State == BUZ_ACTIVE_HIGH )
  ec:	8b 81       	ldd	r24, Y+3	; 0x03
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	39 f4       	brne	.+14     	; 0x100 <BUZ_voidOff+0x26>
	{
		DIO_u8SetPinValue(BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_u8PIN_LOW) ;
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	9a 81       	ldd	r25, Y+2	; 0x02
  f6:	69 2f       	mov	r22, r25
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_u8SetPinValue>
  fe:	09 c0       	rjmp	.+18     	; 0x112 <BUZ_voidOff+0x38>
	}
	else if ( BUZ_Configuration.Active_State == BUZ_ACTIVE_LOW )
 100:	8b 81       	ldd	r24, Y+3	; 0x03
 102:	88 23       	and	r24, r24
 104:	31 f4       	brne	.+12     	; 0x112 <BUZ_voidOff+0x38>
	{
		DIO_u8SetPinValue(BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_u8PIN_HIGH) ;
 106:	89 81       	ldd	r24, Y+1	; 0x01
 108:	9a 81       	ldd	r25, Y+2	; 0x02
 10a:	69 2f       	mov	r22, r25
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_u8SetPinValue>
	}
}
 112:	0f 90       	pop	r0
 114:	0f 90       	pop	r0
 116:	0f 90       	pop	r0
 118:	cf 91       	pop	r28
 11a:	df 91       	pop	r29
 11c:	08 95       	ret

0000011e <DIO_u8SetPinDirection>:




u8 DIO_u8SetPinDirection   (u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Direction )
{
 11e:	df 93       	push	r29
 120:	cf 93       	push	r28
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	28 97       	sbiw	r28, 0x08	; 8
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
 132:	8a 83       	std	Y+2, r24	; 0x02
 134:	6b 83       	std	Y+3, r22	; 0x03
 136:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorStatus = 0 ; /* Indicate That No Error */
 138:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8Port <= DIO_u8PORTD ) && ( Copy_u8Pin <= DIO_u8PIN7 ) )
 13a:	8a 81       	ldd	r24, Y+2	; 0x02
 13c:	84 30       	cpi	r24, 0x04	; 4
 13e:	08 f0       	brcs	.+2      	; 0x142 <DIO_u8SetPinDirection+0x24>
 140:	f8 c0       	rjmp	.+496    	; 0x332 <DIO_u8SetPinDirection+0x214>
 142:	8b 81       	ldd	r24, Y+3	; 0x03
 144:	88 30       	cpi	r24, 0x08	; 8
 146:	08 f0       	brcs	.+2      	; 0x14a <DIO_u8SetPinDirection+0x2c>
 148:	f4 c0       	rjmp	.+488    	; 0x332 <DIO_u8SetPinDirection+0x214>
	{
		if( Copy_u8Direction == DIO_u8PIN_INPUT)
 14a:	8c 81       	ldd	r24, Y+4	; 0x04
 14c:	88 23       	and	r24, r24
 14e:	09 f0       	breq	.+2      	; 0x152 <DIO_u8SetPinDirection+0x34>
 150:	77 c0       	rjmp	.+238    	; 0x240 <DIO_u8SetPinDirection+0x122>
		{
			switch(Copy_u8Port)
 152:	8a 81       	ldd	r24, Y+2	; 0x02
 154:	28 2f       	mov	r18, r24
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	38 87       	std	Y+8, r19	; 0x08
 15a:	2f 83       	std	Y+7, r18	; 0x07
 15c:	8f 81       	ldd	r24, Y+7	; 0x07
 15e:	98 85       	ldd	r25, Y+8	; 0x08
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	91 05       	cpc	r25, r1
 164:	59 f1       	breq	.+86     	; 0x1bc <DIO_u8SetPinDirection+0x9e>
 166:	2f 81       	ldd	r18, Y+7	; 0x07
 168:	38 85       	ldd	r19, Y+8	; 0x08
 16a:	22 30       	cpi	r18, 0x02	; 2
 16c:	31 05       	cpc	r19, r1
 16e:	2c f4       	brge	.+10     	; 0x17a <DIO_u8SetPinDirection+0x5c>
 170:	8f 81       	ldd	r24, Y+7	; 0x07
 172:	98 85       	ldd	r25, Y+8	; 0x08
 174:	00 97       	sbiw	r24, 0x00	; 0
 176:	69 f0       	breq	.+26     	; 0x192 <DIO_u8SetPinDirection+0x74>
 178:	60 c0       	rjmp	.+192    	; 0x23a <DIO_u8SetPinDirection+0x11c>
 17a:	2f 81       	ldd	r18, Y+7	; 0x07
 17c:	38 85       	ldd	r19, Y+8	; 0x08
 17e:	22 30       	cpi	r18, 0x02	; 2
 180:	31 05       	cpc	r19, r1
 182:	89 f1       	breq	.+98     	; 0x1e6 <DIO_u8SetPinDirection+0xc8>
 184:	8f 81       	ldd	r24, Y+7	; 0x07
 186:	98 85       	ldd	r25, Y+8	; 0x08
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	91 05       	cpc	r25, r1
 18c:	09 f4       	brne	.+2      	; 0x190 <DIO_u8SetPinDirection+0x72>
 18e:	40 c0       	rjmp	.+128    	; 0x210 <DIO_u8SetPinDirection+0xf2>
 190:	54 c0       	rjmp	.+168    	; 0x23a <DIO_u8SetPinDirection+0x11c>
			{
			case DIO_u8PORTA : CLR_BIT(DDRA , Copy_u8Pin) ; break ;
 192:	aa e3       	ldi	r26, 0x3A	; 58
 194:	b0 e0       	ldi	r27, 0x00	; 0
 196:	ea e3       	ldi	r30, 0x3A	; 58
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	48 2f       	mov	r20, r24
 19e:	8b 81       	ldd	r24, Y+3	; 0x03
 1a0:	28 2f       	mov	r18, r24
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 2e       	mov	r0, r18
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_u8SetPinDirection+0x92>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	0a 94       	dec	r0
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_u8SetPinDirection+0x8e>
 1b4:	80 95       	com	r24
 1b6:	84 23       	and	r24, r20
 1b8:	8c 93       	st	X, r24
 1ba:	bd c0       	rjmp	.+378    	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTB : CLR_BIT(DDRB , Copy_u8Pin) ; break ;
 1bc:	a7 e3       	ldi	r26, 0x37	; 55
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	e7 e3       	ldi	r30, 0x37	; 55
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	48 2f       	mov	r20, r24
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	28 2f       	mov	r18, r24
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 2e       	mov	r0, r18
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_u8SetPinDirection+0xbc>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_u8SetPinDirection+0xb8>
 1de:	80 95       	com	r24
 1e0:	84 23       	and	r24, r20
 1e2:	8c 93       	st	X, r24
 1e4:	a8 c0       	rjmp	.+336    	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTC : CLR_BIT(DDRC , Copy_u8Pin) ; break ;
 1e6:	a4 e3       	ldi	r26, 0x34	; 52
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	e4 e3       	ldi	r30, 0x34	; 52
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	48 2f       	mov	r20, r24
 1f2:	8b 81       	ldd	r24, Y+3	; 0x03
 1f4:	28 2f       	mov	r18, r24
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 2e       	mov	r0, r18
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_u8SetPinDirection+0xe6>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	0a 94       	dec	r0
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_u8SetPinDirection+0xe2>
 208:	80 95       	com	r24
 20a:	84 23       	and	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	93 c0       	rjmp	.+294    	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTD : CLR_BIT(DDRD , Copy_u8Pin) ; break ;
 210:	a1 e3       	ldi	r26, 0x31	; 49
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e1 e3       	ldi	r30, 0x31	; 49
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8b 81       	ldd	r24, Y+3	; 0x03
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_u8SetPinDirection+0x110>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_u8SetPinDirection+0x10c>
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	8c 93       	st	X, r24
 238:	7e c0       	rjmp	.+252    	; 0x336 <DIO_u8SetPinDirection+0x218>
			default : Local_u8ErrorStatus = 1; break ;
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	89 83       	std	Y+1, r24	; 0x01
 23e:	7b c0       	rjmp	.+246    	; 0x336 <DIO_u8SetPinDirection+0x218>
			}
		}

		else if (Copy_u8Direction == DIO_u8PIN_OUTPUT)
 240:	8c 81       	ldd	r24, Y+4	; 0x04
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	09 f0       	breq	.+2      	; 0x248 <DIO_u8SetPinDirection+0x12a>
 246:	72 c0       	rjmp	.+228    	; 0x32c <DIO_u8SetPinDirection+0x20e>
		{
			switch(Copy_u8Port)
 248:	8a 81       	ldd	r24, Y+2	; 0x02
 24a:	28 2f       	mov	r18, r24
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	3e 83       	std	Y+6, r19	; 0x06
 250:	2d 83       	std	Y+5, r18	; 0x05
 252:	8d 81       	ldd	r24, Y+5	; 0x05
 254:	9e 81       	ldd	r25, Y+6	; 0x06
 256:	81 30       	cpi	r24, 0x01	; 1
 258:	91 05       	cpc	r25, r1
 25a:	49 f1       	breq	.+82     	; 0x2ae <DIO_u8SetPinDirection+0x190>
 25c:	2d 81       	ldd	r18, Y+5	; 0x05
 25e:	3e 81       	ldd	r19, Y+6	; 0x06
 260:	22 30       	cpi	r18, 0x02	; 2
 262:	31 05       	cpc	r19, r1
 264:	2c f4       	brge	.+10     	; 0x270 <DIO_u8SetPinDirection+0x152>
 266:	8d 81       	ldd	r24, Y+5	; 0x05
 268:	9e 81       	ldd	r25, Y+6	; 0x06
 26a:	00 97       	sbiw	r24, 0x00	; 0
 26c:	61 f0       	breq	.+24     	; 0x286 <DIO_u8SetPinDirection+0x168>
 26e:	5b c0       	rjmp	.+182    	; 0x326 <DIO_u8SetPinDirection+0x208>
 270:	2d 81       	ldd	r18, Y+5	; 0x05
 272:	3e 81       	ldd	r19, Y+6	; 0x06
 274:	22 30       	cpi	r18, 0x02	; 2
 276:	31 05       	cpc	r19, r1
 278:	71 f1       	breq	.+92     	; 0x2d6 <DIO_u8SetPinDirection+0x1b8>
 27a:	8d 81       	ldd	r24, Y+5	; 0x05
 27c:	9e 81       	ldd	r25, Y+6	; 0x06
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	91 05       	cpc	r25, r1
 282:	e9 f1       	breq	.+122    	; 0x2fe <DIO_u8SetPinDirection+0x1e0>
 284:	50 c0       	rjmp	.+160    	; 0x326 <DIO_u8SetPinDirection+0x208>
			{
			case DIO_u8PORTA : SET_BIT(DDRA , Copy_u8Pin) ; break ;
 286:	aa e3       	ldi	r26, 0x3A	; 58
 288:	b0 e0       	ldi	r27, 0x00	; 0
 28a:	ea e3       	ldi	r30, 0x3A	; 58
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	48 2f       	mov	r20, r24
 292:	8b 81       	ldd	r24, Y+3	; 0x03
 294:	28 2f       	mov	r18, r24
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	02 2e       	mov	r0, r18
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_u8SetPinDirection+0x186>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	0a 94       	dec	r0
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_u8SetPinDirection+0x182>
 2a8:	84 2b       	or	r24, r20
 2aa:	8c 93       	st	X, r24
 2ac:	44 c0       	rjmp	.+136    	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTB : SET_BIT(DDRB , Copy_u8Pin) ; break ;
 2ae:	a7 e3       	ldi	r26, 0x37	; 55
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	e7 e3       	ldi	r30, 0x37	; 55
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	48 2f       	mov	r20, r24
 2ba:	8b 81       	ldd	r24, Y+3	; 0x03
 2bc:	28 2f       	mov	r18, r24
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 2e       	mov	r0, r18
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_u8SetPinDirection+0x1ae>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	0a 94       	dec	r0
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_u8SetPinDirection+0x1aa>
 2d0:	84 2b       	or	r24, r20
 2d2:	8c 93       	st	X, r24
 2d4:	30 c0       	rjmp	.+96     	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTC : SET_BIT(DDRC , Copy_u8Pin) ; break ;
 2d6:	a4 e3       	ldi	r26, 0x34	; 52
 2d8:	b0 e0       	ldi	r27, 0x00	; 0
 2da:	e4 e3       	ldi	r30, 0x34	; 52
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	80 81       	ld	r24, Z
 2e0:	48 2f       	mov	r20, r24
 2e2:	8b 81       	ldd	r24, Y+3	; 0x03
 2e4:	28 2f       	mov	r18, r24
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	02 2e       	mov	r0, r18
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_u8SetPinDirection+0x1d6>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	0a 94       	dec	r0
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_u8SetPinDirection+0x1d2>
 2f8:	84 2b       	or	r24, r20
 2fa:	8c 93       	st	X, r24
 2fc:	1c c0       	rjmp	.+56     	; 0x336 <DIO_u8SetPinDirection+0x218>
			case DIO_u8PORTD : SET_BIT(DDRD , Copy_u8Pin) ; break ;
 2fe:	a1 e3       	ldi	r26, 0x31	; 49
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e1 e3       	ldi	r30, 0x31	; 49
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	80 81       	ld	r24, Z
 308:	48 2f       	mov	r20, r24
 30a:	8b 81       	ldd	r24, Y+3	; 0x03
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 2e       	mov	r0, r18
 316:	02 c0       	rjmp	.+4      	; 0x31c <DIO_u8SetPinDirection+0x1fe>
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	0a 94       	dec	r0
 31e:	e2 f7       	brpl	.-8      	; 0x318 <DIO_u8SetPinDirection+0x1fa>
 320:	84 2b       	or	r24, r20
 322:	8c 93       	st	X, r24
 324:	08 c0       	rjmp	.+16     	; 0x336 <DIO_u8SetPinDirection+0x218>
			default : Local_u8ErrorStatus = 1; break ;
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	89 83       	std	Y+1, r24	; 0x01
 32a:	05 c0       	rjmp	.+10     	; 0x336 <DIO_u8SetPinDirection+0x218>
			}
		}
		else
		{
			Local_u8ErrorStatus = 1;
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	89 83       	std	Y+1, r24	; 0x01
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_u8SetPinDirection+0x218>
		}
	}
	else
	{
		Local_u8ErrorStatus = 1 ;
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorStatus ;
 336:	89 81       	ldd	r24, Y+1	; 0x01
}
 338:	28 96       	adiw	r28, 0x08	; 8
 33a:	0f b6       	in	r0, 0x3f	; 63
 33c:	f8 94       	cli
 33e:	de bf       	out	0x3e, r29	; 62
 340:	0f be       	out	0x3f, r0	; 63
 342:	cd bf       	out	0x3d, r28	; 61
 344:	cf 91       	pop	r28
 346:	df 91       	pop	r29
 348:	08 95       	ret

0000034a <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection  (u8 Copy_u8Port , u8 Copy_u8Direction )
{
 34a:	df 93       	push	r29
 34c:	cf 93       	push	r28
 34e:	00 d0       	rcall	.+0      	; 0x350 <DIO_u8SetPortDirection+0x6>
 350:	00 d0       	rcall	.+0      	; 0x352 <DIO_u8SetPortDirection+0x8>
 352:	0f 92       	push	r0
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
 358:	8a 83       	std	Y+2, r24	; 0x02
 35a:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8ErrorStatus = 0 ; /* Indicate That No Error */
 35c:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 35e:	8a 81       	ldd	r24, Y+2	; 0x02
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	3d 83       	std	Y+5, r19	; 0x05
 366:	2c 83       	std	Y+4, r18	; 0x04
 368:	8c 81       	ldd	r24, Y+4	; 0x04
 36a:	9d 81       	ldd	r25, Y+5	; 0x05
 36c:	81 30       	cpi	r24, 0x01	; 1
 36e:	91 05       	cpc	r25, r1
 370:	d1 f0       	breq	.+52     	; 0x3a6 <DIO_u8SetPortDirection+0x5c>
 372:	2c 81       	ldd	r18, Y+4	; 0x04
 374:	3d 81       	ldd	r19, Y+5	; 0x05
 376:	22 30       	cpi	r18, 0x02	; 2
 378:	31 05       	cpc	r19, r1
 37a:	2c f4       	brge	.+10     	; 0x386 <DIO_u8SetPortDirection+0x3c>
 37c:	8c 81       	ldd	r24, Y+4	; 0x04
 37e:	9d 81       	ldd	r25, Y+5	; 0x05
 380:	00 97       	sbiw	r24, 0x00	; 0
 382:	61 f0       	breq	.+24     	; 0x39c <DIO_u8SetPortDirection+0x52>
 384:	1f c0       	rjmp	.+62     	; 0x3c4 <DIO_u8SetPortDirection+0x7a>
 386:	2c 81       	ldd	r18, Y+4	; 0x04
 388:	3d 81       	ldd	r19, Y+5	; 0x05
 38a:	22 30       	cpi	r18, 0x02	; 2
 38c:	31 05       	cpc	r19, r1
 38e:	81 f0       	breq	.+32     	; 0x3b0 <DIO_u8SetPortDirection+0x66>
 390:	8c 81       	ldd	r24, Y+4	; 0x04
 392:	9d 81       	ldd	r25, Y+5	; 0x05
 394:	83 30       	cpi	r24, 0x03	; 3
 396:	91 05       	cpc	r25, r1
 398:	81 f0       	breq	.+32     	; 0x3ba <DIO_u8SetPortDirection+0x70>
 39a:	14 c0       	rjmp	.+40     	; 0x3c4 <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_u8PORTA : DDRA = Copy_u8Direction ; break ;
 39c:	ea e3       	ldi	r30, 0x3A	; 58
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	8b 81       	ldd	r24, Y+3	; 0x03
 3a2:	80 83       	st	Z, r24
 3a4:	11 c0       	rjmp	.+34     	; 0x3c8 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTB : DDRB = Copy_u8Direction ; break ;
 3a6:	e7 e3       	ldi	r30, 0x37	; 55
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	8b 81       	ldd	r24, Y+3	; 0x03
 3ac:	80 83       	st	Z, r24
 3ae:	0c c0       	rjmp	.+24     	; 0x3c8 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTC : DDRC = Copy_u8Direction ; break ;
 3b0:	e4 e3       	ldi	r30, 0x34	; 52
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	8b 81       	ldd	r24, Y+3	; 0x03
 3b6:	80 83       	st	Z, r24
 3b8:	07 c0       	rjmp	.+14     	; 0x3c8 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTD : DDRD = Copy_u8Direction ; break ;
 3ba:	e1 e3       	ldi	r30, 0x31	; 49
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	8b 81       	ldd	r24, Y+3	; 0x03
 3c0:	80 83       	st	Z, r24
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <DIO_u8SetPortDirection+0x7e>
	default : Local_u8ErrorStatus = 1; break ;
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorStatus ;
 3c8:	89 81       	ldd	r24, Y+1	; 0x01

}
 3ca:	0f 90       	pop	r0
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	cf 91       	pop	r28
 3d6:	df 91       	pop	r29
 3d8:	08 95       	ret

000003da <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue       (u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value )
{
 3da:	df 93       	push	r29
 3dc:	cf 93       	push	r28
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	28 97       	sbiw	r28, 0x08	; 8
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	f8 94       	cli
 3e8:	de bf       	out	0x3e, r29	; 62
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	cd bf       	out	0x3d, r28	; 61
 3ee:	8a 83       	std	Y+2, r24	; 0x02
 3f0:	6b 83       	std	Y+3, r22	; 0x03
 3f2:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorStatus = 0 ; /* Indicate That No Error */
 3f4:	19 82       	std	Y+1, r1	; 0x01

	if(  ( Copy_u8Pin <= DIO_u8PIN7 ) )
 3f6:	8b 81       	ldd	r24, Y+3	; 0x03
 3f8:	88 30       	cpi	r24, 0x08	; 8
 3fa:	08 f0       	brcs	.+2      	; 0x3fe <DIO_u8SetPinValue+0x24>
 3fc:	f4 c0       	rjmp	.+488    	; 0x5e6 <DIO_u8SetPinValue+0x20c>
	{
		if( Copy_u8Value == DIO_u8PIN_LOW)
 3fe:	8c 81       	ldd	r24, Y+4	; 0x04
 400:	88 23       	and	r24, r24
 402:	09 f0       	breq	.+2      	; 0x406 <DIO_u8SetPinValue+0x2c>
 404:	77 c0       	rjmp	.+238    	; 0x4f4 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
 406:	8a 81       	ldd	r24, Y+2	; 0x02
 408:	28 2f       	mov	r18, r24
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	38 87       	std	Y+8, r19	; 0x08
 40e:	2f 83       	std	Y+7, r18	; 0x07
 410:	8f 81       	ldd	r24, Y+7	; 0x07
 412:	98 85       	ldd	r25, Y+8	; 0x08
 414:	81 30       	cpi	r24, 0x01	; 1
 416:	91 05       	cpc	r25, r1
 418:	59 f1       	breq	.+86     	; 0x470 <DIO_u8SetPinValue+0x96>
 41a:	2f 81       	ldd	r18, Y+7	; 0x07
 41c:	38 85       	ldd	r19, Y+8	; 0x08
 41e:	22 30       	cpi	r18, 0x02	; 2
 420:	31 05       	cpc	r19, r1
 422:	2c f4       	brge	.+10     	; 0x42e <DIO_u8SetPinValue+0x54>
 424:	8f 81       	ldd	r24, Y+7	; 0x07
 426:	98 85       	ldd	r25, Y+8	; 0x08
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	69 f0       	breq	.+26     	; 0x446 <DIO_u8SetPinValue+0x6c>
 42c:	60 c0       	rjmp	.+192    	; 0x4ee <DIO_u8SetPinValue+0x114>
 42e:	2f 81       	ldd	r18, Y+7	; 0x07
 430:	38 85       	ldd	r19, Y+8	; 0x08
 432:	22 30       	cpi	r18, 0x02	; 2
 434:	31 05       	cpc	r19, r1
 436:	89 f1       	breq	.+98     	; 0x49a <DIO_u8SetPinValue+0xc0>
 438:	8f 81       	ldd	r24, Y+7	; 0x07
 43a:	98 85       	ldd	r25, Y+8	; 0x08
 43c:	83 30       	cpi	r24, 0x03	; 3
 43e:	91 05       	cpc	r25, r1
 440:	09 f4       	brne	.+2      	; 0x444 <DIO_u8SetPinValue+0x6a>
 442:	40 c0       	rjmp	.+128    	; 0x4c4 <DIO_u8SetPinValue+0xea>
 444:	54 c0       	rjmp	.+168    	; 0x4ee <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA : CLR_BIT(PORTA , Copy_u8Pin) ; break ;
 446:	ab e3       	ldi	r26, 0x3B	; 59
 448:	b0 e0       	ldi	r27, 0x00	; 0
 44a:	eb e3       	ldi	r30, 0x3B	; 59
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	80 81       	ld	r24, Z
 450:	48 2f       	mov	r20, r24
 452:	8b 81       	ldd	r24, Y+3	; 0x03
 454:	28 2f       	mov	r18, r24
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	02 2e       	mov	r0, r18
 45e:	02 c0       	rjmp	.+4      	; 0x464 <DIO_u8SetPinValue+0x8a>
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	0a 94       	dec	r0
 466:	e2 f7       	brpl	.-8      	; 0x460 <DIO_u8SetPinValue+0x86>
 468:	80 95       	com	r24
 46a:	84 23       	and	r24, r20
 46c:	8c 93       	st	X, r24
 46e:	bd c0       	rjmp	.+378    	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : CLR_BIT(PORTB , Copy_u8Pin) ; break ;
 470:	a8 e3       	ldi	r26, 0x38	; 56
 472:	b0 e0       	ldi	r27, 0x00	; 0
 474:	e8 e3       	ldi	r30, 0x38	; 56
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	80 81       	ld	r24, Z
 47a:	48 2f       	mov	r20, r24
 47c:	8b 81       	ldd	r24, Y+3	; 0x03
 47e:	28 2f       	mov	r18, r24
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 2e       	mov	r0, r18
 488:	02 c0       	rjmp	.+4      	; 0x48e <DIO_u8SetPinValue+0xb4>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	0a 94       	dec	r0
 490:	e2 f7       	brpl	.-8      	; 0x48a <DIO_u8SetPinValue+0xb0>
 492:	80 95       	com	r24
 494:	84 23       	and	r24, r20
 496:	8c 93       	st	X, r24
 498:	a8 c0       	rjmp	.+336    	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : CLR_BIT(PORTC , Copy_u8Pin) ; break ;
 49a:	a5 e3       	ldi	r26, 0x35	; 53
 49c:	b0 e0       	ldi	r27, 0x00	; 0
 49e:	e5 e3       	ldi	r30, 0x35	; 53
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	80 81       	ld	r24, Z
 4a4:	48 2f       	mov	r20, r24
 4a6:	8b 81       	ldd	r24, Y+3	; 0x03
 4a8:	28 2f       	mov	r18, r24
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	02 2e       	mov	r0, r18
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <DIO_u8SetPinValue+0xde>
 4b4:	88 0f       	add	r24, r24
 4b6:	99 1f       	adc	r25, r25
 4b8:	0a 94       	dec	r0
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <DIO_u8SetPinValue+0xda>
 4bc:	80 95       	com	r24
 4be:	84 23       	and	r24, r20
 4c0:	8c 93       	st	X, r24
 4c2:	93 c0       	rjmp	.+294    	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : CLR_BIT(PORTD , Copy_u8Pin) ; break ;
 4c4:	a2 e3       	ldi	r26, 0x32	; 50
 4c6:	b0 e0       	ldi	r27, 0x00	; 0
 4c8:	e2 e3       	ldi	r30, 0x32	; 50
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	48 2f       	mov	r20, r24
 4d0:	8b 81       	ldd	r24, Y+3	; 0x03
 4d2:	28 2f       	mov	r18, r24
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 2e       	mov	r0, r18
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_u8SetPinValue+0x108>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	0a 94       	dec	r0
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_u8SetPinValue+0x104>
 4e6:	80 95       	com	r24
 4e8:	84 23       	and	r24, r20
 4ea:	8c 93       	st	X, r24
 4ec:	7e c0       	rjmp	.+252    	; 0x5ea <DIO_u8SetPinValue+0x210>
			default : Local_u8ErrorStatus = 1; break ;
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	89 83       	std	Y+1, r24	; 0x01
 4f2:	7b c0       	rjmp	.+246    	; 0x5ea <DIO_u8SetPinValue+0x210>
			}
		}
		else if (Copy_u8Value == DIO_u8PIN_HIGH)
 4f4:	8c 81       	ldd	r24, Y+4	; 0x04
 4f6:	81 30       	cpi	r24, 0x01	; 1
 4f8:	09 f0       	breq	.+2      	; 0x4fc <DIO_u8SetPinValue+0x122>
 4fa:	72 c0       	rjmp	.+228    	; 0x5e0 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
 4fc:	8a 81       	ldd	r24, Y+2	; 0x02
 4fe:	28 2f       	mov	r18, r24
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	3e 83       	std	Y+6, r19	; 0x06
 504:	2d 83       	std	Y+5, r18	; 0x05
 506:	8d 81       	ldd	r24, Y+5	; 0x05
 508:	9e 81       	ldd	r25, Y+6	; 0x06
 50a:	81 30       	cpi	r24, 0x01	; 1
 50c:	91 05       	cpc	r25, r1
 50e:	49 f1       	breq	.+82     	; 0x562 <DIO_u8SetPinValue+0x188>
 510:	2d 81       	ldd	r18, Y+5	; 0x05
 512:	3e 81       	ldd	r19, Y+6	; 0x06
 514:	22 30       	cpi	r18, 0x02	; 2
 516:	31 05       	cpc	r19, r1
 518:	2c f4       	brge	.+10     	; 0x524 <DIO_u8SetPinValue+0x14a>
 51a:	8d 81       	ldd	r24, Y+5	; 0x05
 51c:	9e 81       	ldd	r25, Y+6	; 0x06
 51e:	00 97       	sbiw	r24, 0x00	; 0
 520:	61 f0       	breq	.+24     	; 0x53a <DIO_u8SetPinValue+0x160>
 522:	5b c0       	rjmp	.+182    	; 0x5da <DIO_u8SetPinValue+0x200>
 524:	2d 81       	ldd	r18, Y+5	; 0x05
 526:	3e 81       	ldd	r19, Y+6	; 0x06
 528:	22 30       	cpi	r18, 0x02	; 2
 52a:	31 05       	cpc	r19, r1
 52c:	71 f1       	breq	.+92     	; 0x58a <DIO_u8SetPinValue+0x1b0>
 52e:	8d 81       	ldd	r24, Y+5	; 0x05
 530:	9e 81       	ldd	r25, Y+6	; 0x06
 532:	83 30       	cpi	r24, 0x03	; 3
 534:	91 05       	cpc	r25, r1
 536:	e9 f1       	breq	.+122    	; 0x5b2 <DIO_u8SetPinValue+0x1d8>
 538:	50 c0       	rjmp	.+160    	; 0x5da <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA : SET_BIT(PORTA , Copy_u8Pin) ; break ;
 53a:	ab e3       	ldi	r26, 0x3B	; 59
 53c:	b0 e0       	ldi	r27, 0x00	; 0
 53e:	eb e3       	ldi	r30, 0x3B	; 59
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	80 81       	ld	r24, Z
 544:	48 2f       	mov	r20, r24
 546:	8b 81       	ldd	r24, Y+3	; 0x03
 548:	28 2f       	mov	r18, r24
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	02 2e       	mov	r0, r18
 552:	02 c0       	rjmp	.+4      	; 0x558 <DIO_u8SetPinValue+0x17e>
 554:	88 0f       	add	r24, r24
 556:	99 1f       	adc	r25, r25
 558:	0a 94       	dec	r0
 55a:	e2 f7       	brpl	.-8      	; 0x554 <DIO_u8SetPinValue+0x17a>
 55c:	84 2b       	or	r24, r20
 55e:	8c 93       	st	X, r24
 560:	44 c0       	rjmp	.+136    	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : SET_BIT(PORTB , Copy_u8Pin) ; break ;
 562:	a8 e3       	ldi	r26, 0x38	; 56
 564:	b0 e0       	ldi	r27, 0x00	; 0
 566:	e8 e3       	ldi	r30, 0x38	; 56
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	80 81       	ld	r24, Z
 56c:	48 2f       	mov	r20, r24
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
 570:	28 2f       	mov	r18, r24
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	81 e0       	ldi	r24, 0x01	; 1
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	02 2e       	mov	r0, r18
 57a:	02 c0       	rjmp	.+4      	; 0x580 <DIO_u8SetPinValue+0x1a6>
 57c:	88 0f       	add	r24, r24
 57e:	99 1f       	adc	r25, r25
 580:	0a 94       	dec	r0
 582:	e2 f7       	brpl	.-8      	; 0x57c <DIO_u8SetPinValue+0x1a2>
 584:	84 2b       	or	r24, r20
 586:	8c 93       	st	X, r24
 588:	30 c0       	rjmp	.+96     	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : SET_BIT(PORTC , Copy_u8Pin) ; break ;
 58a:	a5 e3       	ldi	r26, 0x35	; 53
 58c:	b0 e0       	ldi	r27, 0x00	; 0
 58e:	e5 e3       	ldi	r30, 0x35	; 53
 590:	f0 e0       	ldi	r31, 0x00	; 0
 592:	80 81       	ld	r24, Z
 594:	48 2f       	mov	r20, r24
 596:	8b 81       	ldd	r24, Y+3	; 0x03
 598:	28 2f       	mov	r18, r24
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 2e       	mov	r0, r18
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <DIO_u8SetPinValue+0x1ce>
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	0a 94       	dec	r0
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <DIO_u8SetPinValue+0x1ca>
 5ac:	84 2b       	or	r24, r20
 5ae:	8c 93       	st	X, r24
 5b0:	1c c0       	rjmp	.+56     	; 0x5ea <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : SET_BIT(PORTD , Copy_u8Pin) ; break ;
 5b2:	a2 e3       	ldi	r26, 0x32	; 50
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	e2 e3       	ldi	r30, 0x32	; 50
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	80 81       	ld	r24, Z
 5bc:	48 2f       	mov	r20, r24
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	28 2f       	mov	r18, r24
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 2e       	mov	r0, r18
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <DIO_u8SetPinValue+0x1f6>
 5cc:	88 0f       	add	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	0a 94       	dec	r0
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <DIO_u8SetPinValue+0x1f2>
 5d4:	84 2b       	or	r24, r20
 5d6:	8c 93       	st	X, r24
 5d8:	08 c0       	rjmp	.+16     	; 0x5ea <DIO_u8SetPinValue+0x210>
			default : Local_u8ErrorStatus = 1; break ;
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	89 83       	std	Y+1, r24	; 0x01
 5de:	05 c0       	rjmp	.+10     	; 0x5ea <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorStatus = 1;
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	89 83       	std	Y+1, r24	; 0x01
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorStatus = 1 ;
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorStatus ;
 5ea:	89 81       	ldd	r24, Y+1	; 0x01

}
 5ec:	28 96       	adiw	r28, 0x08	; 8
 5ee:	0f b6       	in	r0, 0x3f	; 63
 5f0:	f8 94       	cli
 5f2:	de bf       	out	0x3e, r29	; 62
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	cd bf       	out	0x3d, r28	; 61
 5f8:	cf 91       	pop	r28
 5fa:	df 91       	pop	r29
 5fc:	08 95       	ret

000005fe <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue      (u8 Copy_u8Port , u8 Copy_u8Value )
{
 5fe:	df 93       	push	r29
 600:	cf 93       	push	r28
 602:	00 d0       	rcall	.+0      	; 0x604 <DIO_u8SetPortValue+0x6>
 604:	00 d0       	rcall	.+0      	; 0x606 <DIO_u8SetPortValue+0x8>
 606:	0f 92       	push	r0
 608:	cd b7       	in	r28, 0x3d	; 61
 60a:	de b7       	in	r29, 0x3e	; 62
 60c:	8a 83       	std	Y+2, r24	; 0x02
 60e:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorStatus = 0 ; /* Indicate That No Error */
 610:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 612:	8a 81       	ldd	r24, Y+2	; 0x02
 614:	28 2f       	mov	r18, r24
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	3d 83       	std	Y+5, r19	; 0x05
 61a:	2c 83       	std	Y+4, r18	; 0x04
 61c:	8c 81       	ldd	r24, Y+4	; 0x04
 61e:	9d 81       	ldd	r25, Y+5	; 0x05
 620:	81 30       	cpi	r24, 0x01	; 1
 622:	91 05       	cpc	r25, r1
 624:	d1 f0       	breq	.+52     	; 0x65a <DIO_u8SetPortValue+0x5c>
 626:	2c 81       	ldd	r18, Y+4	; 0x04
 628:	3d 81       	ldd	r19, Y+5	; 0x05
 62a:	22 30       	cpi	r18, 0x02	; 2
 62c:	31 05       	cpc	r19, r1
 62e:	2c f4       	brge	.+10     	; 0x63a <DIO_u8SetPortValue+0x3c>
 630:	8c 81       	ldd	r24, Y+4	; 0x04
 632:	9d 81       	ldd	r25, Y+5	; 0x05
 634:	00 97       	sbiw	r24, 0x00	; 0
 636:	61 f0       	breq	.+24     	; 0x650 <DIO_u8SetPortValue+0x52>
 638:	1f c0       	rjmp	.+62     	; 0x678 <DIO_u8SetPortValue+0x7a>
 63a:	2c 81       	ldd	r18, Y+4	; 0x04
 63c:	3d 81       	ldd	r19, Y+5	; 0x05
 63e:	22 30       	cpi	r18, 0x02	; 2
 640:	31 05       	cpc	r19, r1
 642:	81 f0       	breq	.+32     	; 0x664 <DIO_u8SetPortValue+0x66>
 644:	8c 81       	ldd	r24, Y+4	; 0x04
 646:	9d 81       	ldd	r25, Y+5	; 0x05
 648:	83 30       	cpi	r24, 0x03	; 3
 64a:	91 05       	cpc	r25, r1
 64c:	81 f0       	breq	.+32     	; 0x66e <DIO_u8SetPortValue+0x70>
 64e:	14 c0       	rjmp	.+40     	; 0x678 <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA : PORTA = Copy_u8Value ; break ;
 650:	eb e3       	ldi	r30, 0x3B	; 59
 652:	f0 e0       	ldi	r31, 0x00	; 0
 654:	8b 81       	ldd	r24, Y+3	; 0x03
 656:	80 83       	st	Z, r24
 658:	11 c0       	rjmp	.+34     	; 0x67c <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB : PORTB = Copy_u8Value ; break ;
 65a:	e8 e3       	ldi	r30, 0x38	; 56
 65c:	f0 e0       	ldi	r31, 0x00	; 0
 65e:	8b 81       	ldd	r24, Y+3	; 0x03
 660:	80 83       	st	Z, r24
 662:	0c c0       	rjmp	.+24     	; 0x67c <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC : PORTC = Copy_u8Value ; break ;
 664:	e5 e3       	ldi	r30, 0x35	; 53
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	8b 81       	ldd	r24, Y+3	; 0x03
 66a:	80 83       	st	Z, r24
 66c:	07 c0       	rjmp	.+14     	; 0x67c <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD : PORTD = Copy_u8Value ; break ;
 66e:	e2 e3       	ldi	r30, 0x32	; 50
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	8b 81       	ldd	r24, Y+3	; 0x03
 674:	80 83       	st	Z, r24
 676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_u8SetPortValue+0x7e>
	default : Local_u8ErrorStatus = 1; break ;
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorStatus ;
 67c:	89 81       	ldd	r24, Y+1	; 0x01

}
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	0f 90       	pop	r0
 686:	0f 90       	pop	r0
 688:	cf 91       	pop	r28
 68a:	df 91       	pop	r29
 68c:	08 95       	ret

0000068e <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue       (u8 Copy_u8Port , u8 Copy_u8Pin , u8* Copy_u8Value )
{
 68e:	df 93       	push	r29
 690:	cf 93       	push	r28
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	27 97       	sbiw	r28, 0x07	; 7
 698:	0f b6       	in	r0, 0x3f	; 63
 69a:	f8 94       	cli
 69c:	de bf       	out	0x3e, r29	; 62
 69e:	0f be       	out	0x3f, r0	; 63
 6a0:	cd bf       	out	0x3d, r28	; 61
 6a2:	8a 83       	std	Y+2, r24	; 0x02
 6a4:	6b 83       	std	Y+3, r22	; 0x03
 6a6:	5d 83       	std	Y+5, r21	; 0x05
 6a8:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorStatus = 0 ; /* Indicate That No Error */
 6aa:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8Value != NULL) && ( Copy_u8Pin <= DIO_u8PIN7) )
 6ac:	8c 81       	ldd	r24, Y+4	; 0x04
 6ae:	9d 81       	ldd	r25, Y+5	; 0x05
 6b0:	00 97       	sbiw	r24, 0x00	; 0
 6b2:	09 f4       	brne	.+2      	; 0x6b6 <DIO_u8GetPinValue+0x28>
 6b4:	78 c0       	rjmp	.+240    	; 0x7a6 <DIO_u8GetPinValue+0x118>
 6b6:	8b 81       	ldd	r24, Y+3	; 0x03
 6b8:	88 30       	cpi	r24, 0x08	; 8
 6ba:	08 f0       	brcs	.+2      	; 0x6be <DIO_u8GetPinValue+0x30>
 6bc:	74 c0       	rjmp	.+232    	; 0x7a6 <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
 6be:	8a 81       	ldd	r24, Y+2	; 0x02
 6c0:	28 2f       	mov	r18, r24
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	3f 83       	std	Y+7, r19	; 0x07
 6c6:	2e 83       	std	Y+6, r18	; 0x06
 6c8:	4e 81       	ldd	r20, Y+6	; 0x06
 6ca:	5f 81       	ldd	r21, Y+7	; 0x07
 6cc:	41 30       	cpi	r20, 0x01	; 1
 6ce:	51 05       	cpc	r21, r1
 6d0:	59 f1       	breq	.+86     	; 0x728 <DIO_u8GetPinValue+0x9a>
 6d2:	8e 81       	ldd	r24, Y+6	; 0x06
 6d4:	9f 81       	ldd	r25, Y+7	; 0x07
 6d6:	82 30       	cpi	r24, 0x02	; 2
 6d8:	91 05       	cpc	r25, r1
 6da:	34 f4       	brge	.+12     	; 0x6e8 <DIO_u8GetPinValue+0x5a>
 6dc:	2e 81       	ldd	r18, Y+6	; 0x06
 6de:	3f 81       	ldd	r19, Y+7	; 0x07
 6e0:	21 15       	cp	r18, r1
 6e2:	31 05       	cpc	r19, r1
 6e4:	69 f0       	breq	.+26     	; 0x700 <DIO_u8GetPinValue+0x72>
 6e6:	5c c0       	rjmp	.+184    	; 0x7a0 <DIO_u8GetPinValue+0x112>
 6e8:	4e 81       	ldd	r20, Y+6	; 0x06
 6ea:	5f 81       	ldd	r21, Y+7	; 0x07
 6ec:	42 30       	cpi	r20, 0x02	; 2
 6ee:	51 05       	cpc	r21, r1
 6f0:	79 f1       	breq	.+94     	; 0x750 <DIO_u8GetPinValue+0xc2>
 6f2:	8e 81       	ldd	r24, Y+6	; 0x06
 6f4:	9f 81       	ldd	r25, Y+7	; 0x07
 6f6:	83 30       	cpi	r24, 0x03	; 3
 6f8:	91 05       	cpc	r25, r1
 6fa:	09 f4       	brne	.+2      	; 0x6fe <DIO_u8GetPinValue+0x70>
 6fc:	3d c0       	rjmp	.+122    	; 0x778 <DIO_u8GetPinValue+0xea>
 6fe:	50 c0       	rjmp	.+160    	; 0x7a0 <DIO_u8GetPinValue+0x112>
		{
		case DIO_u8PORTA : *Copy_u8Value = GET_BIT(PINA , Copy_u8Pin ) ; break ;
 700:	e9 e3       	ldi	r30, 0x39	; 57
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	80 81       	ld	r24, Z
 706:	28 2f       	mov	r18, r24
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	8b 81       	ldd	r24, Y+3	; 0x03
 70c:	88 2f       	mov	r24, r24
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	a9 01       	movw	r20, r18
 712:	02 c0       	rjmp	.+4      	; 0x718 <DIO_u8GetPinValue+0x8a>
 714:	55 95       	asr	r21
 716:	47 95       	ror	r20
 718:	8a 95       	dec	r24
 71a:	e2 f7       	brpl	.-8      	; 0x714 <DIO_u8GetPinValue+0x86>
 71c:	ca 01       	movw	r24, r20
 71e:	81 70       	andi	r24, 0x01	; 1
 720:	ec 81       	ldd	r30, Y+4	; 0x04
 722:	fd 81       	ldd	r31, Y+5	; 0x05
 724:	80 83       	st	Z, r24
 726:	41 c0       	rjmp	.+130    	; 0x7aa <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTB : *Copy_u8Value = GET_BIT(PINB , Copy_u8Pin ) ; break ;
 728:	e6 e3       	ldi	r30, 0x36	; 54
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	80 81       	ld	r24, Z
 72e:	28 2f       	mov	r18, r24
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	8b 81       	ldd	r24, Y+3	; 0x03
 734:	88 2f       	mov	r24, r24
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	a9 01       	movw	r20, r18
 73a:	02 c0       	rjmp	.+4      	; 0x740 <DIO_u8GetPinValue+0xb2>
 73c:	55 95       	asr	r21
 73e:	47 95       	ror	r20
 740:	8a 95       	dec	r24
 742:	e2 f7       	brpl	.-8      	; 0x73c <DIO_u8GetPinValue+0xae>
 744:	ca 01       	movw	r24, r20
 746:	81 70       	andi	r24, 0x01	; 1
 748:	ec 81       	ldd	r30, Y+4	; 0x04
 74a:	fd 81       	ldd	r31, Y+5	; 0x05
 74c:	80 83       	st	Z, r24
 74e:	2d c0       	rjmp	.+90     	; 0x7aa <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTC : *Copy_u8Value = GET_BIT(PINC , Copy_u8Pin ) ; break ;
 750:	e3 e3       	ldi	r30, 0x33	; 51
 752:	f0 e0       	ldi	r31, 0x00	; 0
 754:	80 81       	ld	r24, Z
 756:	28 2f       	mov	r18, r24
 758:	30 e0       	ldi	r19, 0x00	; 0
 75a:	8b 81       	ldd	r24, Y+3	; 0x03
 75c:	88 2f       	mov	r24, r24
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	a9 01       	movw	r20, r18
 762:	02 c0       	rjmp	.+4      	; 0x768 <DIO_u8GetPinValue+0xda>
 764:	55 95       	asr	r21
 766:	47 95       	ror	r20
 768:	8a 95       	dec	r24
 76a:	e2 f7       	brpl	.-8      	; 0x764 <DIO_u8GetPinValue+0xd6>
 76c:	ca 01       	movw	r24, r20
 76e:	81 70       	andi	r24, 0x01	; 1
 770:	ec 81       	ldd	r30, Y+4	; 0x04
 772:	fd 81       	ldd	r31, Y+5	; 0x05
 774:	80 83       	st	Z, r24
 776:	19 c0       	rjmp	.+50     	; 0x7aa <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTD : *Copy_u8Value = GET_BIT(PIND , Copy_u8Pin ) ; break ;
 778:	e0 e3       	ldi	r30, 0x30	; 48
 77a:	f0 e0       	ldi	r31, 0x00	; 0
 77c:	80 81       	ld	r24, Z
 77e:	28 2f       	mov	r18, r24
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	8b 81       	ldd	r24, Y+3	; 0x03
 784:	88 2f       	mov	r24, r24
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	a9 01       	movw	r20, r18
 78a:	02 c0       	rjmp	.+4      	; 0x790 <DIO_u8GetPinValue+0x102>
 78c:	55 95       	asr	r21
 78e:	47 95       	ror	r20
 790:	8a 95       	dec	r24
 792:	e2 f7       	brpl	.-8      	; 0x78c <DIO_u8GetPinValue+0xfe>
 794:	ca 01       	movw	r24, r20
 796:	81 70       	andi	r24, 0x01	; 1
 798:	ec 81       	ldd	r30, Y+4	; 0x04
 79a:	fd 81       	ldd	r31, Y+5	; 0x05
 79c:	80 83       	st	Z, r24
 79e:	05 c0       	rjmp	.+10     	; 0x7aa <DIO_u8GetPinValue+0x11c>
		default : Local_u8ErrorStatus = 1; break ;
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	89 83       	std	Y+1, r24	; 0x01
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <DIO_u8GetPinValue+0x11c>
		}
	}
	else
	{
		Local_u8ErrorStatus = 1 ;
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_u8ErrorStatus ;
 7aa:	89 81       	ldd	r24, Y+1	; 0x01
}
 7ac:	27 96       	adiw	r28, 0x07	; 7
 7ae:	0f b6       	in	r0, 0x3f	; 63
 7b0:	f8 94       	cli
 7b2:	de bf       	out	0x3e, r29	; 62
 7b4:	0f be       	out	0x3f, r0	; 63
 7b6:	cd bf       	out	0x3d, r28	; 61
 7b8:	cf 91       	pop	r28
 7ba:	df 91       	pop	r29
 7bc:	08 95       	ret

000007be <main>:
#include "DIO_Interface.h"
#include "BUZ_Interface.h"


void main (void )
{
 7be:	df 93       	push	r29
 7c0:	cf 93       	push	r28
 7c2:	cd b7       	in	r28, 0x3d	; 61
 7c4:	de b7       	in	r29, 0x3e	; 62
 7c6:	ff cf       	rjmp	.-2      	; 0x7c6 <main+0x8>

000007c8 <_exit>:
 7c8:	f8 94       	cli

000007ca <__stop_program>:
 7ca:	ff cf       	rjmp	.-2      	; 0x7ca <__stop_program>
